
#include <iostream>
#include <math.h>

using namespace std;

 double input, input2, numberbin, armstrong, counter, checker, tenth; //Initilazes stuff
 double exponentialValue[2], sum, finalvalueCheck;

int main() //Main Loop
{

 int calculation[4]; //Array for digits
 
 
 cout << "Input a number";
cin >> input;//Take an input

checker = 100; //Number to check against for digits, uses 100 for now but will change to 10  and then 1 for later
armstrong = 1; //name is misleading, this is just to check if the counter during the for loop matches up to the checker, if it reaches the checker number, the result is 1 and adds a number to the digit in the array, for example, if the number is 500, the number will increment by 1 each time the checker and counter hit an increment of 100, leaving you with a value of 5, supposedly
numberbin = 0; //a variable to hold the number to throw in the array because this code is a mess

for (counter = 1; counter < input; counter++) //For loop for the hundredths space
{
    
    if (armstrong == checker/counter)
    {
        
        checker=checker + 100;
        numberbin ++;
        
    }
    
 /*       cout <<armstrong << endl;
        cout << counter << endl;
        cout << checker << endl;*/
}


calculation[0] = numberbin;
armstrong = numberbin * 100; //creates a number in the hundredths so you can subtract it from input and start working on tenths
input2 = input - armstrong; //Should create a number in the tenths, if the number is 526, numberbin should produce 500, leaving you with 26
numberbin = 0;
armstrong = 1;
checker = 10;
for (counter = 1; counter < input2; counter++) //For loop for the hundredths space
{
    
    if (armstrong == checker/counter)
    {
        
        checker=checker + 10;
        numberbin ++;
        
    }
    
 /*       cout <<armstrong << endl;
        cout << counter << endl;
        cout << checker << endl;*/
} 


calculation[1] = numberbin;

armstrong = (calculation[0] *100) + (calculation[1] * 10);// Creates a number in the first two digit spots to subtract to get the tenth
tenth = input - armstrong;
calculation[2] = tenth;
//cout << numberbin << endl;
cout << calculation[0] << endl;
cout << calculation[1] << endl;
cout << calculation [2] << endl;

exponentialValue[0] = pow (calculation[0], 3);
exponentialValue[1] = pow (calculation[1], 3);
exponentialValue[2] = pow (calculation[2], 3);
sum = exponentialValue[0]+exponentialValue[1]+exponentialValue[2];
cout << exponentialValue[0] << endl;
cout << exponentialValue[1] << endl;
cout << exponentialValue[2] << endl;
cout << sum << endl;

if (sum == input)
cout << "Yes";
else
cout << "No";
    
    return 0;
}



